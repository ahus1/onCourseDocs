<?xml version="1.0" encoding="UTF-8" ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
	version="5.0" xml:id="advancedSetup">
	<title>Advanced Setup and Configuration</title>
	<para>This chapter outlines the advanced configuration options for access control, users and
		groups, using external databases and server memory allocation..</para>
	<section xml:id="advancedSetup-accessControl">
		<title>Controlling User Access (authorisation)</title>
		<section>
			<title>Setting up Active Directory (AD) authentication and authorisation.</title>
			<para>The below example has been completed with Windows Server 2003 R2 SP2 and onCourse
				1.7.13. onCourse has the ability to use an external LDAP/AD server for
				authentication and authorisation, what we mean by this is that you do not need to
				use the onCourse user and group database but you can use your already setup AD
				database. Firstly on your Windows Server 2003 Machine go to "My Computer" right
				click and select "Properties" and you will find the following screen.</para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/Windows_2003_system_properties.png" format="png"/>
				</imageobject>
			</mediaobject>
			<para>Please take careful note of the "Full Computer Name" and the "Domain" as with this
				information you now have the building blocks for our configuration.</para>
			<para>Now the next thing we need to get the LDAP/AD authentication working is either the
				Administrator password or, a user account which is a member of the Administrators
				group. This is because when a query happens on the AD server it is required to login
				first before it can do any searches on users. If your administrators want to lock it
				down further they are welcome to do so, we only need read access to all user and
				group objects in the AD as well as the passwords for all of those users. So now we
				enter "Active Directory Users and Computers" and create our user: <mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="100%" contentdepth="100%"
							fileref="images/Create_a_win_2003_user.png" format="png"/>
					</imageobject>
				</mediaobject> and add it to the administrators group and remember your
				password!</para>
			<para>Now we have everything we need! Complete the setup screen as follows:</para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/onCourse_LDAP_AD_screen_setup.png" format="png"/>
				</imageobject>
			</mediaobject>
			<para>Once you have substituted all of the settings as necessary press the "Test
				Connection" button to ensure that onCourse can bind to the LDAP server. Once that
				works, you can then go to the "Users" section of this configuration page and place
				"sAMAccountName" and (objectClass=user) for the search filter. Now test a user in
				your domain and see if it authenticates. If it works, congratulations you are now
				authenticating against your AD server!</para>
		</section>
		<section>
			<title>AD Authorisation</title>
			<para>Authorisation is the process of giving your users the correct rights when they are
				logged in, this has a direct relationship with the different roles you can setup or
				create within onCourse. If you wish to use your AD server to allocate roles to your
				users, complete the following:</para>
			<para>At the top of your "Active Directory Users and Computers" create an
				"Organizational Unit" (OU) and call it "onCourse".</para>
			<para>In that OU create security groups which reflect the names of the roles in
				onCourse. Say for example the roles which are build into onCourse (you can find this
				in "File" --> "Preferences" --> "Access" in onCourse):</para>
			<para>
				<itemizedlist>
					<listitem>
						<para>Administration Manager</para>
					</listitem>
					<listitem>
						<para>Course Manager</para>
					</listitem>
					<listitem>
						<para>Enrolment Officer</para>
					</listitem>
					<listitem>
						<para>Financial Manager</para>
					</listitem>
				</itemizedlist>
			</para>
			<para>You can add or delete roles here as you wish but a corresponding group must exist
				in AD for the authorisation/access rights to be allocated.</para>
			<para>When you have created those groups in AD add the necessary users who belong to
				each group.</para>
			<para>We can then turn it on the onCourse preferences under LDAP/Authorisation and Roles
				and set it up the same as the following picture:</para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/LDAP_AD_authorisation_settings.png" format="png"/>
				</imageobject>
			</mediaobject>
			<para>That is all for Windows Server AD/LDAP authentication and authorisation! good
				luck!</para>
		</section>
	</section>
	<section xml:id="advancedSetup-serverconfigurationfile">
		<title>Server configuration file</title>
		<para>Sometimes the onCourse server defaults aren't perfect for your office. Ports may be
			blocked, another server might already be set up. We've added the ability to specify
			useful parameters in a configuration file that onCourse Server will check on startup. </para>
		<para>Create a text file called with the name 'onCourse.cfg' and place in the same folder as
			the onCourse Server executable, whether that be running on Windows (.exe), OSX (.app) or
			Unix/Linux (.jar). </para>
		<para> The directives allowed in this file are:
			<programlisting>
		ip – specify which IP addresses to listen on. Repeat this line as many times as you require.
		ssl_port – specify which port to listen on for SSL client connection.
		db – specify and URI for your database.
		max_concurrent_users - maximum number of users who can connect at once
		client_server_compression_level - compression between client and server connection. 0 is off, 6 is default and 9 is the maximum compression setting. More compression uses more CPU at each end.
	 </programlisting></para>
		<para> A sample onCourse.cfg might contain:
			<programlisting>
		port=0
		ssl_port=8182
		db=jdbc:mysql//db.example.com/onCourse
		ip=192.168.0.1
		ip=192.168.0.2
		max_concurrent_users=10
		client_server_compression_level=8
			</programlisting></para>
		<para>examples of URLs for internal Derby database (OS X, FreeBSD):
			<programlisting>
		db=jdbc:derby:/Users/admin/onCourse/
		db=file:/Users/admin/onCourse/
</programlisting></para>
		<para>examples of URLs for internal Derby databse (Windows):<programlisting>
		db=jdbc:derby:/C:/onCourse/
		db=file:/C:/onCourse/
				</programlisting><note>
				<para>
					<simplelist>
						<member> use 3 slashes after the protocol name 'file' in both cases </member>
						<member> use /, not \ also under Windows </member>
						<member> onCourse will replace all white spaces with '%20', If you use
							windows or there are white spaces in the URI path you must surround the
							URI with ". </member>
					</simplelist>
				</para>
			</note></para>
	</section>
	<section xml:id="advancedSetup-externalDatabase">
		<title>Using an external database</title>
		<para>In order to connect to external databases such as MySQL and MS SQL, onCourse Server
			needs to know where the external database lives. This can be done by using a server
			configuration file, see <xref xlink:href="#advancedSetup-serverconfigurationfile"/> below. Starting
			the server with special arguments (in the cases of headless configurations commonly
			found on Unix-derivative systems such as FreeBSD, Linux and Solaris), or choosing the
			external database option through GUI when first starting onCourse Server. <note>
				<para>connecting to an external database is a paid for feature, you must contact us
					to enable it. </para>
			</note></para>
		<para>A valid URI contains the following information: <simplelist>
				<member> host, e.g. 203.29.62.146 or delish.ish.com.au </member>
				<member> port, e.g. 1376, 3306 or 1521 </member>
				<member> database name, e.g. onCourse </member>
				<member> user name, e.g. oncourse </member>
				<member> password, e.g. oncourse </member>
				<member> every vendor has its own URI (URL) format which has to be used (remind
					quotations) </member>
			</simplelist> MS SQL Server:
			<programlisting>
				  db=jdbc:jtds:sqlserver://&lt;host>:&lt;port>/&lt;dbName>;user=username;password=password
				  db=jdbc:jtds:sqlserver://203.29.62.146:1376/onCourse;user=oncourse;password=oncourse
				</programlisting>
			MySQL:
			<programlisting>
				  db=jdbc:mysql://&lt;host>:&lt;port>/&lt;dbname>?user=username&amp;password=password
				  db=jdbc:mysql://delish.ish.com.au:3306/onCourse?user=oncourse&amp;password=oncourse
				</programlisting>
			It is not necessary to specify a port, if the default port is used. </para>
		<para> More information about URIs at <link
				xlink:href="http://blogs.msdn.com/ie/archive/2006/12/06/file-uris-in-windows.aspx"
				>http://blogs.msdn.com/ie/archive/2006/12/06/file-uris-in-windows.aspx</link>
		</para>
	</section>
	<section xml:id="advancedSetup-serverMemory">
		<title>Server Memory Allocation</title>
		<para>In addition, you can specify a different memory utilisation for onCourse Server.
			onCourse Server will try to use all the memory you allocate to it, since it makes use of
			that memory for caching. Up to a certain point, adding more memory will help, but after
			that more memory will have no effect or even slow things down since the server has more
			work to do managing all that cache. You will have to tune your settings according to
			your own needs, but the default will do fairly well for most installations.</para>
		<para>If you are running Linux or Unix, you will find the necessary settings in the startup
			script. On Windows you need to create a text file with the name onCourseServer.vmoptions
			or onCourseService.vmoptions. The name of this file before the dot must match exactly
			the name of your executable before the dot. In that file put
			this:<programlisting>-Xmx1500M</programlisting></para>
		<para>That will increase the cache to 1500 Mb for onCourse Server. About another 80Mb will
			be used by the application itself, so the total usage will be those two combined. On
			Windows 32bit, never go past 1.5Gb for onCourse because of limitations in Windows. A
			Unix or OSX 32bit environment will allow you to assign up 3.5Gb.</para>
		<para>The onCourseServer.log will report errors of java.lang.OutOfMemoryError if you have
			given the onCourse Server insufficient RAM for your usage requirements. Prior to this
			your end users may also detect processing errors, such as failing enrolments.</para>
		<para>Beyond what you have allocated to onCourse, make sure the server has sufficient RAM to
			run the operating system and other applications. It is very important that the server
			doesn't swap memory to disk at any time or you will encounter major performance
			problems.</para>
		<para>In a 64bit operating system you can install more than 4Gb of RAM in the server memory.
			OS X users will be running 64bit by default. We recommend installing 64bit operating
			systems for all servers.</para>
	</section>
	<section xml:id="advancedSetup-Help">
		<title>Log files</title>
		<para>The onCourse server application and the onCourse client application both create daily log
			files. The onCourse server log levels are set by the onCourse database manager inside
			the config file. </para>
	</section>
	<section>
		<title>Audit Logging</title>
		<para>Audit logs are created when a record is created, edited or deleted. When a script fails or
			an email key collision occurs, an audit log record is also created. You can find the
			Audio Logs window by typing 'Audit Logs' into the search on the Dashboard, or by
			clicking the question mark icon on a window in onCourse, then clicking 'View audit
			trail'.</para>
		<para>The Audit Log list view window displays all entities edited or created by each onCourse user
			and the date and time of that action. </para>
		<para>The advanced search function in Audit logs allows you to search for a particular type
			of log e.g. script failure or log from a particular user.</para>
		<para>Double clicking on the audit log for a script failure or email key collision will
			provide additional information in 'message' field in the edit view. Edit, create or
			delete logs do not show any additional information in the edit view.</para>
		<para>You can also access the audit logs for a particular record by using the 'find related'
			feature from any list view. For example, you can select a class and find the related
			audit logs for that one particular class, or from the user account record, all audit
			logs for one particular user.</para>
		<mediaobject>
			<imageobject>
				<imagedata scalefit="1" width="100%" contentdepth="100%"
					fileref="images/audit_log_list_view.png" format="png"/>
			</imageobject>
			<caption>
				<para>The list view of the audit logs</para>
			</caption>
		</mediaobject>
	</section>
</chapter>
